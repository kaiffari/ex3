{"version":3,"sources":["reminders.js","addReminders.js","App.js","reportWebVitals.js","index.js"],"names":["ShowReminders","props","removeReminder","e","preventDefault","window","confirm","axios","delete","target","id","then","response","deleteReminder","console","log","catch","error","message","this","reminders","length","map","reminder","timestamp","toLocaleString","name","onClick","important","React","Component","AddReminders","addReminder","event","findIndex","o","state","newReminder","maxid","time","newTime","toISOString","reminderObject","post","concat","setReminder","alert","handleReminderChange","setState","value","handleTimeChange","Date","onSubmit","onChange","type","App","password","bind","get","data","remainReminders","filter","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.76d63113.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass ShowReminders extends React.Component {\n  constructor(props) {\n    super(props);\n  };\n\n  removeReminder = (e) => {\n     \n    /* prevent normal submit rendering and get from network */\n    e.preventDefault()\n\n    if (window.confirm('Haluatko todella poistaa?')) {\n        /* delete from database */\n        axios\n        .delete('https://thawing-bayou-48463.herokuapp.com/api/reminders/' + e.target.id) /*https://thawing-bayou-48463.herokuapp.com*/\n        .then(response => {\n          /* clear also parent state and update rendering after succesful database deletionn */\n          this.props.deleteReminder(e.target.id);\n          console.log('deleted: ', e.target.id)\n        })\n        .catch(error => {\n          console.log('delete error: ', error.message)\n        })\n    }\n  }\n\n  render () {\n    console.log('render')\n    \n    if (this.props.reminders.length > 0) {\n    return (\n        <div>  \n          <h2>Reminders</h2>\n          <table><tbody>\n           {this.props.reminders.map(\n              reminder =>\n              <tr key={reminder.id}> \n                <td>{reminder.timestamp.toLocaleString()}</td>\n                <td>{reminder.name}</td>\n                <td><button id={reminder.id} onClick={this.removeReminder}>Poista</button></td>\n                <td>{reminder.important ? 'tärkeä!' : 'vähemmän tärkeä'}</td>\n              </tr>\n              )\n            }\n          </tbody></table>\n        </div>\n      )\n    } else {\n      return (<div><h2>Reminders</h2></div>)\n    }\n  }\n}\n\nexport default ShowReminders\n\n/*                <td><button onClick={toggleImportance}>{label}</button></td>*/\n","import React from 'react';\nimport axios from 'axios';\n\nclass AddReminders extends React.Component {\n    constructor(props) {  /* voiko constructorin jättää pois, kokeile */\n      super(props);\n      this.state = {\n        newReminder: '',\n        newTime: new Date()//.toLocaleString()\n      }\n    }\n\n  addReminder = (event) => {\n  \n    /* prevent normal submit rendering and get from network */\n    event.preventDefault()\n\n    /* prevent duplicates */\n    var pos = this.props.reminders.findIndex(o => o.name === this.state.newReminder)\n    if (pos == -1) {\n\n      /* construct new object */\n      /* HUOM tällä maxid:llä ei ole väliä Heroku käytössä, koska siellä arvotaan uusi id */\n      var maxid = 0\n      this.props.reminders.map(o => {if (o.id > maxid) maxid = o.id})\n      maxid = maxid + 1\n\n      var time  = this.state.newTime.toISOString()\n      const reminderObject = {\n        name: this.state.newReminder,\n        timestamp: time,\n        id: maxid\n      }\n\n      /* write to database */\n      axios\n        .post('https://thawing-bayou-48463.herokuapp.com/api/reminders', reminderObject) /* https://thawing-bayou-48463.herokuapp.com voi jättää pois, tarvitaan paikallisen testaamiseen*/\n        .then(response => {\n          /* concatenate new list and set to App state */\n          const reminders = this.props.reminders.concat(reminderObject)\n          this.props.setReminder(reminders)\n          console.log('post promise fulfilled for: ', maxid)\n          /* clear input field */\n          this.state.newReminder = ''\n      })\n        .catch(error => {\n          console.log(error.message)\n        })\n\n    } else {\n      alert('A duplicate reminder exists already!')\n    }\n  }\n\n  handleReminderChange = (event) => {\n    this.setState({ newReminder: event.target.value })\n  }\n\n  handleTimeChange = (event) => {\n    this.setState({ newTime: event.target.value })\n  }\n  \n  render () {\n\n    return (\n      <div>\n        <form onSubmit={this.addReminder}>\n            <div>\n              Aihe: <input\n                value={this.state.newReminder}\n                onChange={this.handleReminderChange}\n              />\n            </div>\n            <div>\n              Aika: <input\n                value={this.state.newTime}\n                onChange={this.handleTimeChange}\n              />\n            </div>\n            <div>\n              <button type=\"submit\">Lisää</button>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddReminders\n\n/*      date: ,*/\n","import React from 'react';\nimport axios from 'axios';\nimport ShowReminders from './reminders.js';\nimport AddReminders from './addReminders.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      reminders: [],\n      password: ''\n    }\n    this.setReminder = this.setReminder.bind(this);\n    this.deleteReminder = this.deleteReminder.bind(this);\n  }\n\n        /* http://localhost:3001 paikallinen serveri, https://thawing-bayou-48463.herokuapp.com  heroku ilman api tasoa */\n  componentDidMount() {\n    axios\n      .get('https://thawing-bayou-48463.herokuapp.com/api/reminders')\n      .then(response => {\n        console.log('get promise fulfilled')\n        console.log('response data: ', response.data)\n        this.setState({ reminders: response.data })\n      })\n  }\n\n  setReminder(reminders) {\n    this.setState(\n      {reminders: reminders}\n    )\n  }\n\n  deleteReminder(id) {\n    console.log('deleteReminder from status...', {id})\n    const remainReminders = this.state.reminders.filter(i => i.id != id)\n    this.setState({reminders: remainReminders})\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Add Reminder</h2>\n        <AddReminders\n          reminders={this.state.reminders} \n          setReminder={this.setReminder}/>\n        <ShowReminders\n          reminders={this.state.reminders}\n          deleteReminder={this.deleteReminder}/>\n      </div>\n    \n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}