{"version":3,"sources":["reminders.js","addReminders.js","App.js","reportWebVitals.js","index.js"],"names":["ShowReminders","props","removeReminder","e","preventDefault","window","confirm","axios","delete","target","id","then","response","deleteReminder","console","log","catch","error","message","updateReminder","important","reminder","reminders","find","r","updatedReminder","put","newReminders","map","setReminder","this","length","timestamp","toLocaleString","name","onClick","React","Component","AddReminders","addReminder","event","findIndex","o","state","newReminder","time","newTime","toISOString","reminderObject","Math","random","post","data","concat","setState","alert","handleReminderChange","value","handleTimeChange","Date","onSubmit","onChange","type","App","password","bind","get","remainReminders","filter","i","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea054250.chunk.js","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nclass ShowReminders extends React.Component {\n  constructor(props) {\n    super(props);\n  };\n\n  removeReminder = (e) => {\n     \n    /* prevent normal submit rendering and get from network */\n    e.preventDefault()\n\n    if (window.confirm('Haluatko todella poistaa?')) {\n        /* delete from database */\n        axios\n        .delete('https://thawing-bayou-48463.herokuapp.com/api/reminders/' + e.target.id) /*https://thawing-bayou-48463.herokuapp.com*/\n        .then(response => {\n          /* clear also parent state and update rendering after succesful database deletion */\n          this.props.deleteReminder(e.target.id);\n          console.log('deleted: ', e.target.id)\n        })\n        .catch(error => {\n          console.log('delete error: ', error.message)\n        })\n    }\n  }\n\n\n  updateReminder = (e) => {\n     \n    console.log('toggle importance: ', e.target.id, e.target.important)\n\n    /* prevent normal submit rendering and get from network */\n    e.preventDefault()\n\n    /* toggle */\n    const reminder = this.props.reminders.find(r => r.id === e.target.id)\n    const updatedReminder = { ...reminder, important: !reminder.important }\n    console.log('new: ', updatedReminder)\n    /* write to database */\n    axios\n    .put('https://thawing-bayou-48463.herokuapp.com/api/reminders/' + e.target.id, updatedReminder)\n    .then(response => {\n      /* set also parent state and update rendering after succesful database deletion */\n      const newReminders = this.props.reminders.map(r => (r.id === e.target.id ? updatedReminder : r))\n      this.props.setReminder(newReminders)\n      console.log('updated: ', e.target.id)\n    })\n    .catch(error => {\n      console.log('update error: ', error.message)\n    })\n  }\n\n  render () {\n    console.log('render')\n    \n    if (this.props.reminders.length > 0) {\n    return (\n        <div>  \n          <h2>Reminders</h2>\n          <table><tbody>\n           {this.props.reminders.map(\n              reminder =>\n              <tr key={reminder.id}> \n                <td>{reminder.timestamp.toLocaleString()}</td>\n                <td>{reminder.name}</td>\n                <td><button id={reminder.id} onClick={this.removeReminder}>Poista</button></td>\n                <td><button id={reminder.id} onClick={this.updateReminder}>{reminder.important ? 'tärkeä!' : 'vähemmän tärkeä'} '(vaihda)'</button></td>\n              </tr>\n              )\n            }\n          </tbody></table>\n        </div>\n      )\n    } else {\n      return (<div><h2>Reminders</h2></div>)\n    }\n  }\n}\n\nexport default ShowReminders\n\n/*                <td><button onClick={toggleImportance}>{label}</button></td>*/\n","import React from 'react';\nimport axios from 'axios';\n\nclass AddReminders extends React.Component {\n    constructor(props) {  /* voiko constructorin jättää pois, kokeile */\n      super(props);\n      this.state = {\n        newReminder: '',\n        newTime: new Date()//.toLocaleString()\n      }\n    }\n\n  addReminder = (event) => {\n  \n    /* prevent normal submit rendering and get from network */\n    event.preventDefault()\n\n    /* prevent duplicates */\n    var pos = this.props.reminders.findIndex(o => o.name === this.state.newReminder)\n    if (pos == -1) {\n\n      /* construct new object */\n      var time  = this.state.newTime.toISOString()\n      const reminderObject = {\n        name: this.state.newReminder,\n        timestamp: time,\n        important: Math.random() > 0.7\n      }\n\n      /* write to database */\n      axios\n        .post('https://thawing-bayou-48463.herokuapp.com/api/reminders', reminderObject) /* https://thawing-bayou-48463.herokuapp.com voi jättää pois, tarvitaan paikallisen testaamiseen*/\n        .then(response => {\n          /* concatenate new list and set to App state */\n          reminderObject.id = response.data /* post returns only new database id */\n          const reminders = this.props.reminders.concat(reminderObject)\n          this.props.setReminder(reminders)\n          /* clear input field */\n          this.setState({newReminder : ''})\n          console.log('post promise fulfilled for: ', reminderObject.name, 'id: ', response.data)\n          //console.log('obj: ', reminderObject)\n      })\n        .catch(error => {\n          console.log(error.message)\n          window.alert('Ei voitu lisätä!')\n        })\n\n    } else {\n      alert('A duplicate reminder exists already!')\n    }\n  }\n\n  handleReminderChange = (event) => {\n    //console.log('new value: ', {newReminder: event.target.value})\n    this.setState({ newReminder: event.target.value })\n  }\n\n  handleTimeChange = (event) => {\n    this.setState({ newTime: event.target.value })\n  }\n  \n  render () {\n\n    return (\n      <div>\n        <form onSubmit={this.addReminder}>\n            <div>\n              Aihe: <input\n                value={this.state.newReminder}\n                onChange={this.handleReminderChange}\n              />\n            </div>\n            <div>\n              Aika: <input\n                value={this.state.newTime}\n                onChange={this.handleTimeChange}\n              />\n            </div>\n            <div>\n              <button type=\"submit\">Lisää</button>\n            </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddReminders\n\n/*      date: ,*/\n","import React from 'react';\nimport axios from 'axios';\nimport ShowReminders from './reminders.js';\nimport AddReminders from './addReminders.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      reminders: [],\n      password: ''\n    }\n    this.setReminder = this.setReminder.bind(this);\n    this.deleteReminder = this.deleteReminder.bind(this);\n  }\n\n        /* http://localhost:3001 paikallinen serveri, https://thawing-bayou-48463.herokuapp.com  heroku ilman api tasoa */\n  componentDidMount() {\n    axios\n      .get('https://thawing-bayou-48463.herokuapp.com/api/reminders')\n      .then(response => {\n        console.log('get promise fulfilled')\n        console.log('response data: ', response.data)\n        this.setState({ reminders: response.data })\n      })\n  }\n\n  setReminder(reminders) {\n    this.setState(\n      {reminders: reminders}\n    )\n  }\n\n  deleteReminder(id) {\n    console.log('deleteReminder from status...', {id})\n    const remainReminders = this.state.reminders.filter(i => i.id != id)\n    this.setState({reminders: remainReminders})\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Add Reminder</h2>\n        <AddReminders\n          reminders={this.state.reminders} \n          setReminder={this.setReminder}/>\n        <ShowReminders\n          reminders={this.state.reminders}\n          deleteReminder={this.deleteReminder}\n          setReminder={this.setReminder}/>\n      </div>\n    \n    )\n  }\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}